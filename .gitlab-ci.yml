# ==============================================================================
# Environment setup
# ==============================================================================
image: server-harbor:80/dls2/dls2-dev:22.04

# ==============================================================================
# Stages
# ==============================================================================
stages:
  - build
  - packdeploy 
  
# ------------------------------------------------------------------------------
# Build Stage
# ------------------------------------------------------------------------------
# Print versions of installed programmes on the docker image.
# Install all libs required by the project
display:versions:
  stage: build
  tags:
    - dls2
  script:
    - cmake --version
    - gcc --version
    - g++ --version

build:
  stage: build
  tags:
    - dls2
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan gitlab.advr.iit.it >> ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts
    - git clone git@gitlab.advr.iit.it:dls-lab/dls_gitlab_ci.git -b master
    # verify if the commit branch exists in dls_messages
    - TEST=$(git ls-remote --heads git@gitlab.advr.iit.it:dls-lab/dls_messages.git $CI_COMMIT_BRANCH | wc -l)
    - if [ "$TEST" == "0" ] ; then export BRANCH=develop; else export BRANCH=$CI_COMMIT_BRANCH; fi
    - git clone git@gitlab.advr.iit.it:dls-lab/dls_messages.git -b $BRANCH
    - cd dls_messages
    - mkdir build && cd build
    - cmake ..
    - make -j$(nproc)
    - make install
    - cd ../..
    # verify if the commit branch exists in robotlib
    - TEST=$(git ls-remote --heads git@gitlab.advr.iit.it:dls-lab/robotlib.git $CI_COMMIT_BRANCH | wc -l)
    - if [ "$TEST" == "0" ] ; then export BRANCH=develop; else export BRANCH=$CI_COMMIT_BRANCH; fi
    - git clone git@gitlab.advr.iit.it:dls-lab/robotlib.git -b $BRANCH
    - cd robotlib
    - mkdir build && cd build
    - cmake ..
    - make -j$(nproc)
    - make install
    - cd ../..
    # verify if the commit branch exists in dls2
    - TEST=$(git ls-remote --heads git@gitlab.advr.iit.it:dls-lab/dls2.git $CI_COMMIT_BRANCH | wc -l)
    - if [ "$TEST" == "0" ] ; then export BRANCH=develop; else export BRANCH=$CI_COMMIT_BRANCH; fi
    - git clone git@gitlab.advr.iit.it:dls-lab/dls2.git -b $BRANCH
    - cd dls2
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake ..
    - make -j$(nproc)
    - make install
    - cd ../..
    # build the project
    - mkdir build
    - cd build
    - cmake ..
    - make -j$(nproc)
  artifacts:
    paths:
      - dls_gitlab_ci/*
      - dls_messages/*
      - robotlib/*
      - dls2/*
      - build/*
      - bin/*
    expire_in: 3 hrs

# ------------------------------------------------------------------------------
# Pack and Deploy Stage
# ------------------------------------------------------------------------------
packdeploy:
  stage: packdeploy
  dependencies:
    - build
  tags:
    - dls2
  script:
    - cd dls_messages/build
    - make install
    - cd ../..
    - cd robotlib/build
    - make install
    - cd ../..
    - cd dls2/build
    - make install
    - cd ../..
    - cd build
    - make package
    - source ../dls_gitlab_ci/make-json.bash token=$DLSUSER_TOKEN project=$CI_PROJECT_ID branch=$CI_COMMIT_BRANCH job=$CI_JOB_ID tag=latest release=$(lsb_release -sc) > out.json
    - 'curl -X post -H "Content-Type: application/json" -d @out.json http://server-ubuntu18:9000/hooks/deploy-apt'
  artifacts:
    paths:
      - build/*deb
    expire_in: 1 week
  only:
    - master